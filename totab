#!/usr/bin/env python
#change path to python if needed


import pandas as pd
import argparse

# Get our command line arguments
parser = argparse.ArgumentParser(description='csv to  LaTeX syntax table')
parser.add_argument("origin", nargs ='?', default= " ", help="Ausgangsdatei")
parser.add_argument("save", nargs ='?', default="auto.txt", help='Zieldatei')
parser.add_argument("title", nargs='?',  default="<Enter title here>", help='Tabellentitel, der im \\caption-Befehl stehen soll')
args = parser.parse_args()

#request missing arguments
if args.origin == " ":
    args.origin = input("path to file to convert: ")

if args.save == "auto.txt":
   s = input("path to savefile name (press enter for default): ")
if s != "":
    args.save = s
del s

if args.title == "<Enter title here>":
    t = input("title of table (press enter for default): ")
if t != "":
    args.title = t
del t

#load csv to dataframe
df = pd.read_csv(args.origin)
columns = df.columns

#open file
file = open(args.save, "w+")

#write head
file.write("\\begin{table}[!ht]\n\\centering\n\\caption{"+args.title+"}\n\\begin{tabular}{")
for i in range(len(columns)):
    file.write("|c")
file.write("|}\n\\hline\n")

#write column names
i = 1
for column in columns:
    file.write(column)
    if i != len(columns):
        file.write("&")
    else:
        file.write("\\\ \n")
    i += 1
file.write("\\hline\n")
del i

#write table
for index, row in df.iterrows():
    i = 1
    for c in columns:
        file.write(str(row[c]))
        if i != len(columns):
            file.write("&")
        else:
            file.write("\\\ \n")
        i += 1
    file.write("\\hline\n")
del i

#end table
file.write("\\end{tabular}\n\\end{table}\n")

#close file
file.close()

#print confirmation

print("scheint geklappt zu haben")
